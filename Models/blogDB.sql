use BlogDb;
CREATE TABLE IF NOT EXISTS users(
    _id CHAR(36) PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL ,
    token TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
ALTER TABLE users ADD COLUMN img_name VARCHAR(255);
ALTER TABLE users ADD COLUMN img_url VARCHAR(255);
SELECT * FROM users;
DESCRIBE users;
CREATE TABLE IF NOT EXISTS Category(
    _id CHAR(36) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    creator char(36),
    FOREIGN KEY (creator) REFERENCES users(_id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
SELECT * FROM Category;
DESCRIBE Category;
CREATE TABLE IF NOT EXISTS posts(
    _id CHAR(36) PRIMARY KEY,
    userId VARCHAR(36) NOT NULL,
    img_name VARCHAR(255),
    img_url VARCHAR(255),
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    categoryId VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES users(_id) ON DELETE CASCADE,
    FOREIGN KEY (categoryId) REFERENCES Category(_id) ON DELETE SET NULL
);
SELECT * FROM posts;
DESCRIBE posts;
CREATE TABLE IF NOT EXISTS favorites(
    _id CHAR(36) PRIMARY KEY,
    userId VARCHAR(36) NOT NULL,
    postId VARCHAR(36) NOT NULL,
    FOREIGN KEY (userId) REFERENCES users(_id) ON DELETE CASCADE,
    FOREIGN KEY (postId) REFERENCES posts(_id) ON DELETE CASCADE
);
DESCRIBE favorites;

CREATE TABLE IF NOT EXISTS comment(
    _id CHAR(36) PRIMARY KEY,
    userId VARCHAR(36) NOT NULL,
    postId VARCHAR(36) NOT NULL,
    content TEXT NOT NULL,
    FOREIGN KEY (userId) REFERENCES users(_id) ON DELETE CASCADE,
    FOREIGN KEY (postId) REFERENCES posts(_id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
DESCRIBE comment;